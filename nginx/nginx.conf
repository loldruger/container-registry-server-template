# This module must be loaded. Requires custom Nginx build.
load_module modules/ngx_http_acme_module.so;

worker_processes auto;

events {
    worker_connections 1024;
}

http {
    # Define the ACME issuer (Let's Encrypt)
    acme_issuer default {
        # Path to store account keys and certs
        state_path /etc/nginx/acme_state;
        # Let's Encrypt v2 Directory
        uri https://acme-v02.api.letsencrypt.org/directory;
        # Must agree to terms of service
        accept_terms_of_service;
    }

    # HTTP Server for ACME challenge and redirection
    server {
        listen 80;
        # !! REPLACE THIS with your domain !!
        server_name sub.example.com;

        # Handle ACME HTTP-01 challenge
        location /.well-known/acme-challenge/ {
            acme_challenge;
        }

        # Redirect all other HTTP traffic to HTTPS
        location / {
            return 301 https://$host$request_uri;
        }
    }

    # HTTPS Server (The main registry proxy)
    server {
        listen 443 ssl http2;
        # !! REPLACE THIS with your domain !!
        server_name sub.exmaple.com;

        # Use the certificate provided by the ACME module
        ssl_certificate     $acme_certificate;
        ssl_certificate_key $acme_certificate_key;
        ssl_protocols       TLSv1.2 TLSv1.3;

        # Disable client body size limit for large image pushes
        client_max_body_size 0;

        location / {
            # Basic Authentication
            auth_basic "Registry Realm";
            auth_basic_user_file /etc/nginx/auth/htpasswd;

            # Proxy pass to the registry service
            proxy_pass http://registry:5000;
            
            # Set headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 900;
        }
    }
}
